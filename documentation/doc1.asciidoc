= Sentinel 2 Download
:doctype: book
:icons: font
:source-highlighter: highlightjs
:toc: left
:toclevels: 3
:sectlinks:
:sectnums:

== Introduction

This document provides an overview of the Python code to download sentinel 2 imagery.

== Python Code


First you have to create an account on Sentinel Hub. 
The code iis inspired from https://medium.com/rotten-grapes/download-sentinel-data-using-python-from-copernicus-9ec0a789e470 . A filtering step has been added in order to use only bands that are interest.

[source,python]
----

----
== Additional tips

Sentinel Hub EO Browser: You can use the EO Browser to visually inspect and select the specific Sentinel-2 images you need before downloading them programmatically.

Data Processing: Consider using libraries like rasterio or geopandas for further processing and analysis of the downloaded satellite imagery

== About Sentinel 2
https://en.wikipedia.org/wiki/Sentinel-2
https://sentiwiki.copernicus.eu/web/sentinel-2
- 10 m: containing spectral bands 2, 3, 4 , 8, a True Colour Image (TCI) and an AOT and WVP maps resampled from 20 m.

- 20 m: containing spectral bands 1 - 7, the bands 8A, 11 and 12, a True Colour Image (TCI), a Scene Classification (SCL) map and an AOT and WVP maps. The band B8 is omitted as B8A provides more precise spectral information.

- 60 m: containing all the spectral bands provided in the 20 m folder, plus the band 9, a True Colour Image (TCI), a Scene Classification (SCL) map and an AOT and WVP maps. The cirrus band 10 is omitted, as it does not contain surface information.
== Sentinel output file architecture

The following schematic illustrates the architecture of the sentinel 2 files .

[plantuml, diagram-classes, png]
----
@startuml
S2A_MSIL2A_20250321T102731_N0511_R108_T32TMS_20250321T142017.SAFE/
│── GRANULE/
│   ├── L2A_T32TMS_A026456_20250321T102731/
│   │   ├── IMG_DATA/
│   │   │   ├── R10m/  <-- ✅ Only exists for 10m bands
│   │   │   ├── R20m/
│   │   │   ├── R60m/

@enduml
----

== Usage

To use the Python code, follow these steps:

1. Ensure you have Python installed on your system.
2. Save the Python code in a file named `greet.py`.
3. Run the script using the command: `python greet.py`.

== Conclusion

This repository should help you search and download satellite imagery.
